{
  "openapi": "3.0.1",
  "info": {
    "title": "Personal AI External API",
    "description": "The Memory API enables you to create your memories programmatically. Currently, we support text memories and in the future voice memories and visual memories. Memory blocks are processed from each API call and will surface on your memory stack timeline.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.personal.ai"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/v1/memory": {
      "post": {
        "description": "Upload text memories to your memory stack",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Memory response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemoryResponse"
                }
              }
            }
          },
          "503": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/upload-text": {
      "post": {
        "description": "Upload a Document to your Memory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadTextRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Upload success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "doc accepted and processing"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/upload-file": {
      "post": {
        "description": "Upload a File to your Memory",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "message_request": {
                    "type": "string",
                    "description": "JSON string containing upload parameters"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File upload success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "file accepted and processing"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/upload-url": {
      "post": {
        "description": "Upload a URL to your Memory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadUrlRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "URL upload success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "url accepted and processing"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/message": {
      "post": {
        "description": "Interact with AI Message",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Message response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "503": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MemoryRequest": {
        "type": "object",
        "required": ["Text", "SourceName"],
        "properties": {
          "Text": {
            "type": "string",
            "description": "Plain text memories to upload to your stack",
            "example": "My first memory with Personal AI"
          },
          "CreatedTime": {
            "type": "string",
            "description": "Time (including timezone) of the memory",
            "example": "Wed, 28 Jul 2021 13:30:00 PDT"
          },
          "SourceName": {
            "type": "string",
            "description": "The source or application of memory",
            "example": "Notes"
          },
          "RawFeedText": {
            "type": "string",
            "description": "The formatted text that can be stored as it is"
          },
          "DomainName": {
            "type": "string",
            "description": "The AI persona where the memory will be uploaded"
          },
          "Tags": {
            "type": "string",
            "description": "Comma delimited list of tags for the memory",
            "example": "pet,dog,woof woof"
          }
        }
      },
      "UploadTextRequest": {
        "type": "object",
        "required": ["Text"],
        "properties": {
          "Text": {
            "type": "string",
            "description": "Body of text to upload to the memory"
          },
          "Title": {
            "type": "string",
            "description": "Title of the uploaded document"
          },
          "StartTime": {
            "type": "string",
            "format": "date-time",
            "description": "ISO timestamp string indicating start time - utc"
          },
          "EndTime": {
            "type": "string",
            "format": "date-time",
            "description": "ISO timestamp string indicating end time - utc"
          },
          "DomainName": {
            "type": "string",
            "description": "Domain name of AI Persona"
          },
          "Tags": {
            "type": "string",
            "description": "Comma delimited list of tags"
          },
          "is_stack": {
            "type": "boolean",
            "description": "Whether to add the document to memory",
            "default": true
          }
        }
      },
      "UploadUrlRequest": {
        "type": "object",
        "required": ["Url"],
        "properties": {
          "Url": {
            "type": "string",
            "description": "URL to upload"
          },
          "Title": {
            "type": "string",
            "description": "Title of the uploaded document"
          },
          "DomainName": {
            "type": "string",
            "description": "Domain name of AI Persona"
          },
          "Tags": {
            "type": "string",
            "description": "Comma delimited list of tags"
          },
          "is_stack": {
            "type": "boolean",
            "description": "Whether to add the document to memory",
            "default": true
          }
        }
      },
      "MessageRequest": {
        "type": "object",
        "required": ["Text"],
        "properties": {
          "Text": {
            "type": "string",
            "description": "Message to send to your AI for a response"
          },
          "Context": {
            "type": "string",
            "description": "Additional context for the AI response"
          },
          "DomainName": {
            "type": "string",
            "description": "The domain part of the AI profile url"
          },
          "UserName": {
            "type": "string",
            "description": "Name of the user sending the request"
          },
          "SessionId": {
            "type": "string",
            "description": "Session ID for conversation continuity"
          },
          "SourceName": {
            "type": "string",
            "description": "Name of the source app of the inbound message"
          },
          "is_stack": {
            "type": "boolean",
            "description": "Flag to add user message to memory",
            "default": false
          },
          "is_draft": {
            "type": "boolean",
            "description": "Flag to create a copilot message",
            "default": false
          }
        }
      },
      "MessageResponse": {
        "type": "object",
        "properties": {
          "ai_message": {
            "type": "string"
          },
          "ai_score": {
            "type": "number"
          },
          "ai_name": {
            "type": "string"
          },
          "ai_picture": {
            "type": "string"
          },
          "SessionId": {
            "type": "string"
          },
          "source_app": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "example": "AI memory api unauthorized."
          }
        }
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    }
  }
}
